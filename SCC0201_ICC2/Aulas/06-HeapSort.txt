f(n) = 3a + 2b + f(n/2)
	 = 3a + 2b + 3a + 2b + f(n/4)
	 = lgn * (3a+2b) + a

heapify(v, p, n) {
	if (p >= n) return
	f = p*2
	if (v[f] < v[f+1])
		f = f+1;
	if (v[f] > v[p]) {
		swap(v+p, v+f)
		heapify(v, f, n)
	}

}

buildmaxheap(v, n) {
	for (i = n/2; i >= 1; i--)
		heapify(v, i, n)
}

heapsort(v, n) {
	buildmaxheap(v, n)
	p = n-1
	while(p > 0) {
		swap(&v[1], &v[p])
		p--
		heapify(v, 1, p+1)
	}
}

heapsort
f(n) = (n/2 * lgn) + g(n), g(n) = while()
g(n) = lg(N!)
	n/2 lg(n/2) <= lg(N!) <= n lg n
f(n) = (n/2)lgN + n lgN

